
program    ::=	[(define)] {statement}

define     ::= "DEFINE" nl
		[ (("VALUE" [INTEGER] variable nl) )+ ]
		[ ("FUNCTION" function nl {statement} nl "END" nl)+ ]
		[ ("JOB" job "USE" (variable) nl {statement} nl "RETURN" (variable) nl)+ ]
	"END" nl


statement  ::=  "LABEL" label nl
		|   "GOTO"  label nl
		|   "TIMER" INTEGER ("SET" | "PRINT" | "GET") nl
		|   "DEFINE" function nl {statement} nl "END" nl
		|   "{" (expression | st) "}" "REPEAT" nl {statement} nl "END" nl	

		|   “QUEUE” job nl
		|   “JOIN” nl 
		|   “RESULT”  nl {statement} nl "END" nl


		|   (expression | st) ( "PRINT" nl
					| "PLOT"  nl
					| ¨WAIT¨  nl
					| "AS" variable nl
					| "DO" nl {statement} nl "END" nl
					| "GOTO" label nl
					|  nl )


expression ::=	(INTEGER | STRING | function | "`"function | variable | word)+
word       ::=	('+'|'-'|'*'|'/'|'%'|'=='|'!='|'>'|'<'|'GCD'|'!'|'DUP'|'SWAP'|'OVER'|'DROP'| 'DEPTH' | 'INPUT'|'RAWIN')
     	             		  
label      ::=  ident
job        ::=  ident
function   ::=  ident
variable   ::=  ident

st         ::=	('.'|'..')

nl         ::= '\n'+

ident 	::= 	[a-zA-Z][a-zA-Z0-9]*






===V2======================================================================================================


program    ::=	{statement}
statement  ::=  "LABEL" ident nl
			|   "GOTO" ident nl
			|   "TIMER" INTEGER ("SET" | "PRINT" | "GET") nl
			|   "DEFINE" ident nl {statement} nl "END" nl
			|   "{" (expression | st) "}" "REPEAT" nl {statement} nl "END" nl	   
			|   (expression | st) ( "PRINT" nl
								| "PLOT" nl
								| ¨WAIT¨ nl
								| "AS" ident nl
								| "DO"   nl {statement} nl "END" nl
								| "GOTO" ident nl
								|  nl )



expression ::=	(INTEGER | STRING | "`" ident | ident | word )+
word       ::=	('+'|'-'|'*'|'/'|'%'|'=='|'!='|'>'|'<'|'GCD'|'!'|'DUP'|'SWAP'|'OVER'|'DROP'|'INPUT'|'RAWIN')
ident      ::=	(variable | function )

st         ::=	('.'|'..')
nl         ::= '\n'+

