
program    ::=	{statement}
statement  ::=  "LABEL" ident nl
			|   "GOTO" ident nl
			|   "TIMER" INTEGER ("SET" | "PRINT" | "GET") nl
			|   "DEFINE" ident nl {statement} nl "END" nl
			|   "{" (expression | st) "}" "REPEAT" nl {statement} nl "END" nl	   
			|   (expression | st) ( "PRINT" nl
								| "PLOT" nl
								| ¨WAIT¨ nl
								| "AS" ident nl
								| "DO"   nl {statement} nl "END" nl
								| "GOTO" ident nl
								|  nl )



expression ::=	(INTEGER | STRING | "`" ident | ident | "[" struct "]" | word )+
word       ::=	('+'|'-'|'*'|'/'|'%'|'=='|'!='|'>'|'<'|'GCD'|'!'|'DUP'|'SWAP'|'OVER'|'DROP'|'INPUT'|'RAWIN')


struct     ::= 	( CREATE | APPEND ) 		ident ( | "[" (values)+ "]") |
				( VALUES | TYPED | PRINT)	ident ( | "[" (index)+  "]") |
				  LEN						ident					     |
				  PRINT								  "[" (values)+ "]" 			  

values     ::= 	(. | INTEGERS | STRINGS | "`" ident | indent )
index      ::= 	(. | INTEGERS | "`" ident | indent )


ident      ::=	(variable | function | struct)

st         ::=	('.'|'..')
nl         ::= '\n'+


