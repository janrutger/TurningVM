
program    ::=	{statement}
statement  ::=  "LABEL" ident nl
			|   "GOTO" ident nl
			|   "TIMER" INTEGER ("SET" | "PRINT" | "GET") nl
			|   "DEFINE" ident nl {statement} nl "END" nl
			|   "{" (expression | st) "}" "REPEAT" nl {statement} nl "END" nl	   
			|   (expression | st) ( "PRINT" nl
								| "PLOT" nl
								| ¨WAIT¨ nl
								| "AS" ident nl
								| "DO"   nl {statement} nl "END" nl
								| "GOTO" ident nl
								|  nl )



expression ::=	(INTEGER | STRING | "`" ident | ident | "[" struct "]" | word )+
word       ::=	('+'|'-'|'*'|'/'|'%'|'=='|'!='|'>'|'<'|'GCD'|'!'|'DUP'|'SWAP'|'OVER'|'DROP'|'INPUT'|'RAWIN')


struct     ::= 	( CREATE | APPEND ) ident "[" [(values)+         ] "]" |
				( VALUES | TYPED  ) ident "[" [(index)+          ] "]" |
                  PRINT             ident "[" [(index | STRING)+ ] "]" |
                  function 	        ident "[" [(index)+          ] "]" |
                  LEN				ident "["                      "]" |
				  PRINT					  "["  (values)+           "]" 	             		  

values     ::= 	(. | INTEGERS | STRINGS | variable | function )
index      ::= 	(    INTEGERS |           variable | function )


ident      ::=	(variable | function )

st         ::=	('.'|'..')
nl         ::= '\n'+


